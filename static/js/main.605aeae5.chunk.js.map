{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","UniversalInputArea/UniversalInputArea.module.css","p2-homeworks/h5-rrd-v6/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","UniversalInputArea/UniversalInputArea.tsx","UniversalEditableSpan/UniversalEditableSpan.tsx","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Message","props","className","css","message","avatarArea","avatarArea2","avatar","src","messageArea","nameOfSender","name","textData","textArea","timeArea","time","messageData","HW1","Affair","affairGrid","affair","priority","deleteButton","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","buttonDiv","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","inputContainer","value","onChange","input","errorMessage","btn","info","GreetingContainer","users","addUserCallback","setName","setError","length","event","currentTarget","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","UniversalInputArea","onEntityFunction","placeholders","placeholder","initText","forbidEmptyInput","minRows","maxRows","onBlurFunction","addButtonText","showCancelButton","cancelButtonText","keyPressMode","showErrorMessage","Math","floor","random","localPlaceholder","localShowAddButton","undefined","localKeyPressMode","numberOfButtons","Boolean","inputAreaStyle","inputArea","inputAreaShowError","buttonAreaStyle","buttonAreaBtn2textarea","buttonArea","cancelButtonStyle","cancelButton","editTextHandler","setErrorText","errorText","mainEntityFunctionHandler","editErrorTextHandler","onKeyPressHandler","onCancelHandler","onBlurHandler","Box","TextField","variant","helperText","multiline","Button","startIcon","Add","IconButton","aria-label","Delete","UniversalEditableSpan","activateEditMode","component","sx","display","HW6","setValue","PreJunior","PATH","Pages","path","element","to","Header","mySidenav","menu","HW5","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.605aeae5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__Rsm2j\",\"avatarArea\":\"Message_avatarArea__2cyS5\",\"avatarArea2\":\"Message_avatarArea2__2HzUw\",\"avatar\":\"Message_avatar__2yhL0\",\"messageArea\":\"Message_messageArea__1Jy3A\",\"nameOfSender\":\"Message_nameOfSender__JhYK3\",\"textData\":\"Message_textData__tBjOm\",\"textArea\":\"Message_textArea__2pRKG\",\"timeArea\":\"Message_timeArea__2teID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairGrid\":\"Affairs_affairGrid__1joyk\",\"buttonDiv\":\"Affairs_buttonDiv__3ZqsJ\",\"deleteButton\":\"Affairs_deleteButton__2smbD\",\"highTask\":\"Affairs_highTask__2q65N\",\"middleTask\":\"Affairs_middleTask___sxG4\",\"lowTask\":\"Affairs_lowTask__1wsXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Greeting_inputContainer__3wo8c\",\"input\":\"Greeting_input__1zMKO\",\"error\":\"Greeting_error__1_yiW\",\"errorMessage\":\"Greeting_errorMessage__Z4Xhz\",\"btn\":\"Greeting_btn__1vKtg\",\"info\":\"Greeting_info__2gOCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputArea\":\"UniversalInputArea_inputArea__2m2FH\",\"btn0\":\"UniversalInputArea_btn0__1_Hlx\",\"btn1\":\"UniversalInputArea_btn1__1CMzd\",\"btn2input\":\"UniversalInputArea_btn2input__1bJYx\",\"btn2textarea\":\"UniversalInputArea_btn2textarea__37wRV\",\"buttonArea\":\"UniversalInputArea_buttonArea__2HqkA\",\"buttonAreaBtn2textarea\":\"UniversalInputArea_buttonAreaBtn2textarea__1wKF9\",\"cancelButton\":\"UniversalInputArea_cancelButton__lc5l1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySidenav\":\"Header_mySidenav___eO81\",\"menu\":\"Header_menu__Auzs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__SLMTT\",\"errorInput\":\"SuperInputText_errorInput__3xYsR\",\"error\":\"SuperInputText_error__3NFmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2hflB\",\"column\":\"HW4_column__1TZx6\",\"testSpanError\":\"HW4_testSpanError__bH9wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__JJW4c\",\"red\":\"SuperButton_red__7zbD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Sleps\",\"spanClassName\":\"SuperCheckbox_spanClassName__1kQ25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3SIOJ\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport css from \"./Message.module.css\"\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={css.message}>\n            <div className={css.avatarArea}>\n                <div className={css.avatarArea2}>\n                    <img className={css.avatar} src={props.avatar}/>\n                </div>\n            </div>\n            <div className={css.messageArea}>\n                <div className={css.nameOfSender}>{props.name}</div>\n                <div className={css.textData}>\n                    <span className={css.textArea}>{props.message}</span>\n                    <span className={css.timeArea}>{props.time}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport css from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    return (\n        <div className={css.affairGrid}>\n            <div className={css[props.affair.priority + 'Task']}>{props.affair.priority}</div>\n            <div className={css[props.affair.priority + 'Task']}>{props.affair.name}</div>\n\n\n            <button className={css.deleteButton} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {Dispatch, SetStateAction} from 'react'\nimport Affair from './Affair'\nimport css from './Affairs.module.css'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: Dispatch<SetStateAction<FilterType>>\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    }\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    }\n    const setLow = () => {\n        props.setFilter(\"low\")\n    }\n\n    return (\n        <div>\n            {mappedAffairs}\n            <div className={css.buttonDiv}>\n                <button onClick={setAll}>All</button>\n                <button onClick={setHigh}>High</button>\n                <button onClick={setMiddle}>Middle</button>\n                <button onClick={setLow}>Low</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\"\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter((el) => el.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter((el) => el._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error === 'empty' ? s.error : '' // need to fix with (?:)\n\n    return (\n        <div className={s.inputContainer}>\n            <input value={name} onChange={setNameCallback} className={s.input + ' ' + inputClass}/>\n            <span className={s.errorMessage}>{error}</span>\n            <button className={s.btn} onClick={addUser}>add</button>\n            <span className={s.info}>Total number of users: {totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(event.currentTarget.value) // need to fix\n        setError('')\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        name ? alert(`Hello  ! ${name}`) : setError('empty') // need to fix\n        setName('')\n    }\n\n    // const [totalUsers, setTotalUsers] = useState<number>(0)\n    const totalUsers = users.length // need to fix\n    //did not get what to do with error\n\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        if (name) {\n            setUsers([...users, {_id: v1(), name: name}])\n        }\n        // const newUser: UserType = {_id: v1(), name: name}\n        // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className : s.superInput} ` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        (onChangeChecked && onChangeChecked(!restProps.checked)) || (onChange && onChange(e))\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'empty text'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n                -------------------\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState, KeyboardEvent, DetailedHTMLProps, InputHTMLAttributes, TextareaHTMLAttributes, ChangeEvent} from 'react';\r\nimport css from './UniversalInputArea.module.css'\r\nimport {Box, Button, IconButton, TextField} from \"@mui/material\";\r\nimport {Delete} from \"@mui/icons-material\";\r\nimport {Add} from '@mui/icons-material';\r\n\r\n\r\n// DEFAULT PROPS FOR INPUT AND TEXTAREA\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype DefaultTextAreaPropsType = DetailedHTMLProps<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>\r\n// TYPES\r\ntype UniversalInputAreaTypeType = 'textarea' | 'input'\r\ntype KeyInputType = 'both' | 'ctrlEnter' | 'enter'\r\n\r\n\r\n// UNIVERSAL TYPE\r\nexport type  UniversalInputAreaPropsType = DefaultInputPropsType & DefaultTextAreaPropsType & {\r\n    type: UniversalInputAreaTypeType\r\n    onEntityFunction: (newText: string) => void\r\n    //optional input area\r\n    placeholders?: Array<string>\r\n    initText?: string\r\n    forbidEmptyInput?: boolean\r\n    minRows?: number\r\n    maxRows?: number\r\n    //optional buttons\r\n    /**\r\n     * Function for an onBlur event. Hides the main button\r\n     */\r\n    onBlurFunction?: () => void\r\n    /**\r\n     * Text for the main button, if it is shown (onBlurFunction). By default: '+'\r\n     */\r\n    addButtonText?: string\r\n    showCancelButton?: boolean\r\n    cancelButtonText?: string\r\n    keyPressMode?: KeyInputType\r\n    //optional error message\r\n    showErrorMessage?: boolean\r\n}\r\n\r\n\r\n// COMPONENT\r\nexport const UniversalInputArea: React.FC<UniversalInputAreaPropsType> = (\r\n    {\r\n        type,\r\n        onEntityFunction,\r\n        //optional input area\r\n        placeholders,\r\n        placeholder,\r\n        initText = '',\r\n        autoFocus = false,\r\n        forbidEmptyInput = true,\r\n        minRows = 2,\r\n        maxRows = 4,\r\n        //optional buttons\r\n        onBlurFunction,\r\n        addButtonText = \"\",\r\n        showCancelButton = false,\r\n        cancelButtonText = \"\",\r\n        keyPressMode,\r\n        //optional error message\r\n        showErrorMessage = true,\r\n    }) => {\r\n    //SET CONST INPUT BEHAVIOUR\r\n    const [localPlaceholder] = useState(placeholders ? placeholders[Math.floor(Math.random() * placeholders.length)] : placeholder)\r\n    //SET CONST BUTTONS\r\n\r\n    //temp playground for\r\n    // console.log(onBlurFunction?.toString())\r\n    // console.log(onBlurFunction?.toString()  === `ƒ () {\r\n    //     return fn.apply(this, arguments);\r\n    //   }`)\r\n    // console.log(onBlurFunction)\r\n    // console.log(typeof  (onBlurFunction))\r\n\r\n    const localShowAddButton = onBlurFunction === undefined\r\n    const localKeyPressMode = keyPressMode ? keyPressMode : (type === 'textarea' ? 'ctrlEnter' : 'both')\r\n    //SET STYLES\r\n    const numberOfButtons = [localShowAddButton, showCancelButton].filter(Boolean).length\r\n    const inputAreaStyle = `${css.inputArea} ${css['btn' + (numberOfButtons > 1 ? numberOfButtons + type : numberOfButtons)]} ${showErrorMessage ? css.inputAreaShowError : ''}`\r\n    const buttonAreaStyle = numberOfButtons === 2 && type === 'textarea' ? css.buttonAreaBtn2textarea : css.buttonArea\r\n    const cancelButtonStyle = css.cancelButton\r\n\r\n\r\n    //TEXT STATE\r\n    const [text, setText] = useState(initText)\r\n    const editTextHandler = (e: ChangeEvent<HTMLTextAreaElement> | ChangeEvent<HTMLInputElement>) => {\r\n        setErrorText('')\r\n        setText(e.currentTarget.value)\r\n    }\r\n\r\n    //ERROR STATE\r\n    const [errorText, setErrorText] = useState('')\r\n    const editErrorTextHandler = (text: string) => setErrorText(text)\r\n\r\n    //MAIN ENTITY CALLBACK\r\n    const mainEntityFunctionHandler = () => {\r\n        if (forbidEmptyInput && !text) {\r\n\r\n            editErrorTextHandler(\"No empty values are allowed\")\r\n            return\r\n        }\r\n        if (text) onEntityFunction(text)\r\n        onBlurFunction !== undefined ? onBlurFunction() : setText('')\r\n    }\r\n\r\n    //KEYPRESS CALLBACK\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLDivElement>) => {\r\n        if ((e.key === '\\n' && (localKeyPressMode === 'both' || localKeyPressMode === 'ctrlEnter')) ||\r\n            (e.key === 'Enter' && (localKeyPressMode === 'both' || localKeyPressMode === 'enter'))\r\n        ) {\r\n            mainEntityFunctionHandler()\r\n        }\r\n    }\r\n\r\n    //OTHER CALLBACKS\r\n    const onCancelHandler = () => setText(initText)\r\n    const onBlurHandler = () => onBlurFunction ? mainEntityFunctionHandler() : true\r\n\r\n    //todo variant?\r\n    //todo onCancelFunction\r\n    //todo color\r\n\r\n    return <Box className={inputAreaStyle}>\r\n        {type === 'input' &&\r\n            <TextField variant={\"standard\"}\r\n                       value={text}\r\n                       autoFocus={autoFocus}\r\n                       placeholder={localPlaceholder}\r\n                       error={!!errorText}\r\n                       helperText={errorText}\r\n                       onChange={editTextHandler}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       onBlur={onBlurHandler}/>}\r\n        {type === 'textarea' &&\r\n            <TextField variant={\"standard\"}\r\n                       value={text}\r\n                       autoFocus={autoFocus}\r\n                       placeholder={localPlaceholder}\r\n                       error={!!errorText}\r\n                       helperText={errorText}\r\n                       onChange={editTextHandler}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       onBlur={onBlurHandler}\r\n                       multiline\r\n                       minRows={minRows}\r\n                       maxRows={maxRows}/>}\r\n        {/*for buttons*/}\r\n        <Box className={buttonAreaStyle}>\r\n            {localShowAddButton &&\r\n                (addButtonText && cancelButtonText\r\n                        ? <Button variant=\"outlined\" startIcon={<Add/>} onClick={mainEntityFunctionHandler}>{addButtonText}</Button>\r\n                        : <IconButton aria-label=\"delete\" onClick={mainEntityFunctionHandler}><Add/></IconButton>\r\n                )}\r\n\r\n            {showCancelButton &&\r\n                (addButtonText && cancelButtonText\r\n                        ? <Button variant=\"outlined\" startIcon={<Delete/>} className={cancelButtonStyle}\r\n                                  onClick={onCancelHandler}>{cancelButtonText}</Button>\r\n                        : <IconButton className={cancelButtonStyle} onClick={onCancelHandler}><Delete/></IconButton>\r\n                )}\r\n        </Box>\r\n    </Box>\r\n}","import React, {useState} from \"react\";\r\nimport {UniversalInputArea} from \"../UniversalInputArea/UniversalInputArea\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ntype UniversalEditableSpanPropsType = {\r\n    text: string\r\n    onEntityFunction: (newText: string) => void\r\n    placeholder?: string\r\n}\r\n\r\nexport function UniversalEditableSpan(props: UniversalEditableSpanPropsType) {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const activateEditMode = () => setEditMode(!editMode)\r\n\r\n    //main callback\r\n    const onEntityFunctionHandler = (text: string) => {\r\n        props.onEntityFunction(text)\r\n    }\r\n    //onblur callback\r\n    const onBlurHandler = () => {\r\n\r\n        activateEditMode()\r\n    }\r\n\r\n    return editMode\r\n        ? <UniversalInputArea type={'input'} onEntityFunction={onEntityFunctionHandler} initText={props.text}\r\n                              autoFocus={true} onBlurFunction={onBlurHandler} placeholder={props.placeholder}/>\r\n        //<input onBlur={activateEditMode} autoFocus={true} value={props.text}/>\r\n        : <Box component=\"div\" sx={{display: 'inline'}} onDoubleClick={activateEditMode}>{props.text ? props.text : props.placeholder}</Box>\r\n}","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\nimport {UniversalEditableSpan} from \"../../UniversalEditableSpan/UniversalEditableSpan\";\nimport {Box, Grid} from \"@mui/material\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState('editable-span-value', value))\n        // const value = localStorage.getItem('editable-span-value')\n        // if (value) setValue(JSON.parse(value))\n    }\n\n    const mySpanHandler = (text: string) => {\n        setValue(text)\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    autoFocus\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <UniversalEditableSpan text={value} onEntityFunction={mySpanHandler} placeholder={\"type something\"}/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Routes, Route, Navigate} from \"react-router-dom\";\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from \"./pages/PreJunior\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior_plus'\n}\n\nfunction Pages() {\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                // add routes\n\n                {/*он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route path={'/*'} element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Pages\";\nimport css from \"./Header.module.css\"\n\nfunction Header() {\n    return (\n        <div className={css.mySidenav}>\n            <span>\n                <NavLink className={css.menu} to={PATH.PRE_JUNIOR}>pre_junior</NavLink>\n                <NavLink className={css.menu} to={PATH.JUNIOR}>junior</NavLink>\n                <NavLink className={css.menu} to={PATH.JUNIOR_PLUS}>junior+</NavLink>\n            </span>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Pages/>\n\n            {/*</HashRouter>*/}\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nfunction App() {\n    return (\n        <HashRouter>\n            <div className={s.App}>\n                <div>react homeworks:</div>\n                {/*<HW1/>*/}\n                {/*<HW2/>*/}\n                {/*<HW3/>*/}\n                {/*<HW4/>*/}\n                <HW5/>\n            </div>\n        </HashRouter>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}